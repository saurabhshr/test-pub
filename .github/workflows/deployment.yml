name: CI/CD pipeline

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

  # repository_dispatch:
  #   types: [data-event]   

jobs:
  deploy:
    name: Deploying build to environments
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-west-2  # Specify your AWS region

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      #   with:
      #     ref: ${{ github.event.client_payload.ref }}
      # - run: echo "yeeee   ${{ github.event.client_payload.sha }}"
      # - run: echo ${{ github.event.client_payload }}
      
        # uses: actions/checkout@v3 
        # with:
        #   ref: ${{ github.event.client_payload.ref }}

      - name: Configure AWS Credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v2
         
        with:
          role-to-assume: arn:aws:iam::710999489330:role/GitHub_OIDC  # Replace with your IAM role ARN
          aws-region: "us-west-2"

      - name: Get image tag from build workflow
        run: echo IMAGE_TAG=${{ github.event.workflow_run.head_commit.id }} >> $GITHUB_ENV  #"IMAGE_TAG=${{ github.event.workflow_run.head_commit.id }}" >> $GITHUB_ENV

      - name: setting image name
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo   "coming $IMAGE_TAG"

      - name: Download build SHA artifact
        uses: actions/download-artifact@v4
        with:
          name: build-sha

      - name: Debug artifact download
        run: ls -la

      - name: Read build SHA
        id: read-sha
        run: |
          SHA=$(cat sha.txt)
          echo "BUILD_SHA=$SHA" >> $GITHUB_ENV

      - name: Use the build SHA
        run: echo "Using build SHA ${{ env.BUILD_SHA }} for deployment"    


      # - name: Run K6 Performance Test
      #   if: github.ref == 'refs/heads/main'
      #   uses: grafana/k6-action@v0.3.0
      #   with:
      #     entryPoint: https://nest-api.dev.nona.hoag.digital
      #   env:
      #     K6_CLOUD_TOKEN: ${{ secrets.K6_CLOUD_TOKEN }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: definitions/task_definition.json
          container-name: poc-container
          image: ${{ env.IMAGE_TAG }} #${{ github.event.client_payload.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: poc-service
          cluster: poc-cluster
          wait-for-service-stability: true 
          

  
