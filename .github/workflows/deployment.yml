name: Docker Build and Deploy to ECR

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Build, Push Docker Image to Corp Account
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-west-2  # Specify your AWS region
      ECR_REGISTRY: "710999489330.dkr.ecr.us-west-2.amazonaws.com/poc"  # ECR registry URL (e.g., 123456789012.dkr.ecr.us-east-1.amazonaws.com)
      ECR_REPOSITORY: "poc"  # ECR repository name
      ECS_CLUSTER: "poc"  # ECS cluster name
      ECS_SERVICE: "poc"  # ECS service name
      IMAGE_TAG: ${{ github.sha }}  # Use the commit SHA as the image tag

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::710999489330:role/GitHub_OIDC  # Replace with your IAM role ARN
          aws-region: "us-west-2"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: poc
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json 
          container-name: poc-container
          image: ${{ steps.build-image.outputs.image }}    
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: poc-service
          cluster: poc-cluster
          wait-for-service-stability: true    

  
