name: Compass API IACM Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
      - develop   # Trigger on push to the dev branch
      - stage # Trigger on push to the stage branch.
  pull_request:
    branches:
      - main
      - develop
      - stage

jobs:
  terraform:
    name: Terraform Init, Plan and Apply
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: ${{ vars.TERRAFORM_VERSION }}
            cli_config_credentials_token: ${{ secrets.TFC_TOKEN }}
            terraform_wrapper: true

      - name: Set Environment Variables
        run: |
          echo "${{ github.ref }}"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "ROLE_TO_ASSUME=${{ vars.GTH_OIDC_ROLE_PROD }}" >> $GITHUB_ENV
            
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "ROLE_TO_ASSUME=${{ vars.GTH_OIDC_ROLE_DEV }}" >> $GITHUB_ENV
            echo "coming in dev"
          else
            echo "Unknown branch"
            exit 1
          fi

      - name: Configure AWS Credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}  # Use the dynamically set role
          aws-region: ${{ vars.AWS_REGION }}  # Specify the AWS region

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/develop'
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
