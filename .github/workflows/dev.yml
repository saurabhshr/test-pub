name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main

jobs:
  dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    env:
      BUILD_COMMAND: build-dev
      CLOUDFRONT_ID: ${{ secrets.DEV_CLOUDFRONT_ID }}
      S3_BUCKET: ${{ secrets.DEV_DEPLOYMENT_BUCKET }}
      cache-name: cache-node-modules

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.DEV_AWS_DEPLOY_ROLE }}
          audience: sts.amazonaws.com

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci
        working-directory: app

      - name: Archive npm failure logs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: npm-logs
          path: ~/.npm/_logs

      - name: Build App
        id: build
        run: |
          cd app
          echo "Running npm install ..."
          echo $(npm --version)
          npm install
          npm run ${{ env.BUILD_COMMAND }} --no-verify

      - name: Deploy app build to S3 bucket and Invalidate cache
        run: |
          cd app/build
          aws s3 sync . ${{ env.S3_BUCKET }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_ID }} --paths "/*"

  prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    env:
      BUILD_COMMAND: build-prod
      CLOUDFRONT_ID: ${{ secrets.PROD_CLOUDFRONT_ID }}
      S3_BUCKET: ${{ secrets.PROD_DEPLOYMENT_BUCKET }}
      cache-name: cache-node-modules

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.PROD_AWS_DEPLOY_ROLE }}
          audience: sts.amazonaws.com

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci
        working-directory: app

      - name: Archive npm failure logs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: npm-logs
          path: ~/.npm/_logs

      - name: Build App
        id: build
        run: |
          cd app
          echo "Running npm install ..."
          echo $(npm --version)
          npm install
          npm run ${{ env.BUILD_COMMAND }} --no-verify

      - name: Deploy app build to S3 bucket and Invalidate cache
        run: |
          cd app/build
          aws s3 sync . ${{ env.S3_BUCKET }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_ID }} --paths "/*"
