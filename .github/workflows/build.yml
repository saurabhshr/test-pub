name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
      id-token: write
      contents: read

jobs:
  deploy:
    name: Build, Push Docker Image to Corp Account
    runs-on: ubuntu-latest

    

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::710999489330:role/GitHub_OIDC  # Replace with your IAM role ARN
          aws-region: "us-west-2"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2  

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: poc
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
          echo "latest image tag  $IMAGE_TAG"

      - name: Save SHA as artifact
        run: echo "${{ github.sha }}" > sha.txt

      - name: Debug SHA file creation
        run: cat sha.txt

      - name: Upload build SHA artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-sha
          path: sha.txt

      - name: Save Docker image to tar file
        run: docker save $REPOSITORY_image:$IMAGE_TAG | gzip > $REPOSITORY_image.tar.gz
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: $REPOSITORY_image.tar.gz    

          
  
